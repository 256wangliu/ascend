% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ascend_objects.R
\docType{class}
\name{EMSet-class}
\alias{EMSet-class}
\alias{EMSet}
\alias{NewEMSet}
\title{Expression and Metadata Set (EMSet)}
\usage{
NewEMSet(ExpressionMatrix = NULL, GeneInformation = NULL,
  CellInformation = NULL, Controls = list())
}
\arguments{
\item{ExpressionMatrix}{An expression matrix in data.frame, dgCMatrix 
(sparse) or matrix format. Rows should represent a transcript and its counts, 
while columns should represent individual cells. This is usually the end 
point for Single Cell RNA-Seq pipelines such as Cell Ranger and DropSeq.}

\item{GeneInformation}{A data frame containing gene identifiers used in the 
expression matrix. The first column should hold the cell identifiers you are 
using in the expression matrix. Other columns contain information about the 
genes, such as their corresponding ENSEMBL transcript identifiers, whether or 
not they are a control and any additional information supplied by the user. 
This is an optional field.}

\item{CellInformation}{A data frame containing cell identifiers 
(usually barcodes) and an integer representing which batch they belong to. 
This is an optional field, and it best used for experiments that contain data 
from multiple samples. This data frame can also hold additional information 
supplied by the user.}

\item{Controls}{A named list of controls, eg. mitochondrial genes, ribosomal 
genes and ERCC spike-ins. These genes must be specified using the identifier 
used in the expression matrix. This information is required for some 
functions.}
}
\value{
This function generates an object belonging to the 
\linkS4class{EMSet}.
}
\description{
An \code{EMSet} is a S4 class that stores data in a format `ascend`` can 
easily work with for analysis.

\code{\link{NewEMSet}} generates a \linkS4class{EMSet} object for use with 
the ascend package. This object contains an expression matrix, associated 
metadata, downstream analysis and a log documenting the actions taken to 
generate this object.
}
\section{Slots}{

\describe{
\item{\code{ExpressionMatrix}}{Transcript counts stored as a sparse matrix, where 
rows are transcript/gene identifiers and columns are invididual cells.}

\item{\code{GeneInformation}}{A data frame containing information a set of gene 
identifiers, such as gene symbols or ENSEMBL transcript identifiers. This 
data frame also holds information on controls and any information provided by 
the user.}

\item{\code{CellInformation}}{A data frame containing each cell identifier, its 
associated batch/sample and additional information such as conditions.}

\item{\code{Controls}}{A named list featuring gene identifiers to use as controls. 
These gene identifiers must match the identifiers used in the expression 
matrix.}

\item{\code{PCA}}{Objects related to dimension reduction, such as a PCA matrixand a 
list of percentage variance values per principal component (PC). Populated by 
\code{\link{RunPCA}}.}

\item{\code{Clusters}}{Objects related to clustering, including a distance matrix, a 
hclust object, cell identifiers and their associated cluster. Populated by 
\code{\link{RunCORE}}.}

\item{\code{Metrics}}{A list of values generated by the \code{\link{GenerateMetrics}} 
function.}

\item{\code{Log}}{A record of functions used on an \linkS4class{EMSet}.}
}}

\examples{
#  Generate random datasets
## Define number of genes and cells
ngenes <- 10000
ncells <- 200

## Generate gene and cell labels
gene_list <- paste0("GENE-", 1:ngenes)
cell_list <- paste0("CELL-", 1:ncells)

## Generate dataframes to input into EMSet
gene_information <- data.frame(id = gene_list)
cell_information <- data.frame(cell_barcode = cell_list, batch = rep(1, ncells))

## Generate expression matrix - taken from scran vignette
mu <- 2^runif(ngenes, -1, 5)
expression_matrix <- matrix(rnbinom(ngenes*ncells, mu = mu, size = 10), nrow = ngenes)
rownames(expression_matrix) <- gene_list
colnames(expression_matrix) <- cell_list

# Create EMSet
MyEMSet <- NewEMSet(ExpressionMatrix = expression_matrix, 
GeneInformation = gene_information, CellInformation = cell_information, 
Controls = list())
}
\seealso{
\linkS4class{EMSet}
}
